# Minimal configuration for HLK-LD2402 radar sensor
# This configuration includes only the essential sensors for everyday use

# Basic ESPHome settings - customize these for your device
esphome:
  name: radar-sensor
  friendly_name: Radar Sensor

esp32:
  board: esp32dev

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot in case WiFi connection fails
  ap:
    ssid: "Radar-Sensor Fallback"
    password: !secret fallback_password

logger:
  level: INFO

# UART configuration for HLK-LD2402
uart:
  id: uart_bus
  tx_pin: GPIO1  # TX0 hardware UART
  rx_pin: GPIO3  # RX0 hardware UART
  baud_rate: 115200
  data_bits: 8
  parity: NONE
  stop_bits: 1

# HLK-LD2402 radar component
external_components:
  - source:
      type: git
      url: https://github.com/mouldybread/hlk_ld2402_esphome
    refresh: 0ms

hlk_ld2402:
  uart_id: uart_bus
  id: radar_sensor
  max_distance: 5.0
  timeout: 5
  throttle: 2000ms         # Distance sensor throttling
  presence_throttle: 1000ms # Presence sensor throttling
  motion_throttle: 1000ms   # Motion sensor throttling

# Binary sensors - only essential ones
binary_sensor:
  # Presence detection - shows if a person is detected
  - platform: hlk_ld2402
    name: "Radar Presence"
    presence: true
    device_class: motion
    hlk_ld2402_id: radar_sensor 
  
  # Motion detection - shows if motion is detected
  - platform: hlk_ld2402
    name: "Motion"
    motion: true
    device_class: motion 
    hlk_ld2402_id: radar_sensor


# Distance sensor - shows how far away the detected person is
sensor:
  - platform: hlk_ld2402
    id: radar_distance
    name: "Distance"
    hlk_ld2402_id: radar_sensor
    device_class: distance
    unit_of_measurement: "cm"
    accuracy_decimals: 1
    throttle: 2000ms  # 2 second throttle for smoother readings
    
  # Only include essential calibration button
button:
  - platform: template
    name: "Calibrate"
    icon: "mdi:radar"
    on_press:
      - lambda: id(radar_sensor).calibrate();

  # Save button for after calibration or threshold changes
  - platform: template
    name: "Save Config"
    icon: "mdi:content-save"
    on_press:
      - lambda: id(radar_sensor).save_config();

# Optional - Add status LED if available
status_led:
  pin: GPIO2
